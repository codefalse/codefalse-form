"use strict";!function(d){function f(e,n,t){if(0<t.length){d("#"+e).find(".codefalse-input-options").show();var i=d("#"+e).find(".codefalse-input-options>ul");for(var a in t){var o=t[a],l=o[n.key],s="";for(var u in n.value){var r=n.value[u];""!=s&&(s+=n.separator),s+=o[r]}i.append('<li value="'+l+'">'+s+"</li>")}}}function p(e){d("#"+e+">.codefalse-input-options").hide().find("ul").empty()}d.fn.codefalseInput=function(e,s){var u=d(this),r={placeholder:"Please search...",key:"id",value:["name"],separator:"-",delay:200,ajax:{type:"GET",url:""}};d.extend(r,e);var c="",o="",n={init:function(){u.attr("type","hidden");var e=parseInt(1e5*Math.random()+"");o="codefalse-search"+e;var n=u.attr("class"),t='<input id="'+o+'" type="text" class="'+n+'" placeholder="'+r.placeholder+'"/>';u.after(t);var i='<div id="'+(c="codefalse-input"+e)+'" class="codefalse-input">        <div class="codefalse-input-options">            <ul></ul>        </div>    </div>';d("#"+o).after(i),d("#"+o).on("input",function(){u.val(""),p(c);var o=d(this),l=o.val();setTimeout(function(){var n,t,e,i,a=o.val();""!=a&&(l==a&&(clearTimeout(),null!=s&&"function"==typeof s&&s(a),null!=r.ajax.url&&""!=r.ajax.url&&(n=c,e=a,i=(t=r).ajax,d.ajax({type:i.type,url:i.url,contentType:"json",data:{codefalse:e},success:function(e){f(n,t,e)}}))))},r.delay)});var a=!0;return d("#"+o).on("blur",function(){a&&(u.val()||d(this).val(""),d("#"+c).find(".codefalse-input-options").hide())}),d("#"+c+">.codefalse-input-options").on("mouseenter",function(){a=!1}),d("#"+c+">.codefalse-input-options").on("mouseleave",function(){a=!0}),d("#"+c+">.codefalse-input-options>ul").on("click","li",function(){var e=d(this).val(),n=d(this).text();u.val(e),d("#"+o).val(n),d("#"+c).find(".codefalse-input-options").hide()}),d("#"+o).on("keypress",function(e){13==e.keyCode&&d("#"+c+">.codefalse-input-options>ul").find("li:first").trigger("click")}),this},adapter:function(e){return f(c,r,e),this},show:function(){return d("#"+o).show(),this},hide:function(){return d("#"+o).hide(),d("#"+o).val(""),u.val(""),p(c),this}};return n.init(),n}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
