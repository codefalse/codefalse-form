"use strict";!function(c){function p(e,t,a){c("#"+e).find(".codefalse-input-options").show();var n=c("#"+e).find(".codefalse-input-options>ul");for(var i in n.empty(),a){var o=a[i],l=o[t.key],s="";for(var u in t.value){var r=t.value[u];""!=s&&(s+=t.separator),s+=o[r]}n.append('<li value="'+l+'">'+s+"</li>")}}c.fn.codefalseInput=function(e,l){var s=c(this),u={placeholder:"Please search...",key:"id",value:["name"],separator:"-",ajax:{type:"GET",url:""}};c.extend(u,e);var r="",t={init:function(){s.attr("type","hidden");var e=parseInt(1e5*Math.random()+""),a="codefalse-search"+e,t=s.attr("class"),n='<input id="'+a+'" type="text" class="'+t+'" placeholder="'+u.placeholder+'"/>';s.after(n);var i='<div id="'+(r="codefalse-input"+e)+'" class="codefalse-input">        <div class="codefalse-input-options">            <ul></ul>        </div>    </div>';c("#"+a).after(i),c("#"+a).on("input",function(){var t,a,e,n;s.val(""),null!=l&&"function"==typeof l&&l(c(this).val()),null!=u.ajax.url&&""!=u.ajax.url&&(t=r,a=u,e=c(this).val(),n=a.ajax,c.ajax({type:n.type,url:n.url,contentType:"json",data:{codefalse:e},success:function(e){p(t,a,e)}}))});var o=!0;return c("#"+a).on("blur",function(){o&&(c(this).val(""),c("#"+r).find(".codefalse-input-options").hide())}),c("#"+r+">.codefalse-input-options").on("mouseenter",function(){o=!1}),c("#"+r+">.codefalse-input-options").on("mouseleave",function(e){o=!0}),c("#"+r+">.codefalse-input-options>ul").on("click","li",function(){var e=c(this).val(),t=c(this).text();s.val(e),c("#"+a).val(t),c("#"+r).find(".codefalse-input-options").hide()}),this},adapter:function(e){return p(r,u,e),this}};return t.init(),t}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
