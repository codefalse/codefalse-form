"use strict";!function(r){r.fn.codefalseFile=function(e){var t=this,i=r(this),f="codefalse-file-"+parseInt(1e5*Math.random()+""),s=r.extend({},{width:"200px",height:"200px",uploadType:"normal"},e);i.on("change",function(){for(var n=r(t)[0].files,e=function(e){var i,t=n[e],a='<div class="codefalse-file-item" style="height: '+(i=s).height+";width: "+i.width+';">   <div class="codefalse-file-operation" style="width: '+i.width+';">      <i class="codefalse-file-del codefalse-font icon-delete"></i>      <i data-modaal-content-source="" class="codefalse-file-yulan codefalse-font icon-yulan"></i>   </div>   <img src="" /></div>',l=r("#"+f).find(".codefalse-file-add");l.before(a),r(".codefalse-file-yulan").modaal({type:"image",before_open:function(e){var i=window.URL.createObjectURL(t);e.target.setAttribute("href",i)},before_close:function(e){var i=e.find("img").attr("src");window.URL.revokeObjectURL(i)}});var o=l.prev(),d=o.find("img");if("normal"===s.uploadType){var c=window.URL.createObjectURL(t);d.attr("src",c),d.on("load",function(){window.URL.revokeObjectURL(d.attr("src"))})}o.find(".codefalse-file-del").on("click",function(){o.remove()})},i=0;i<n.length;i++)e(i)}),i.attr("style","display:none"),i.after('<div id="'+f+'" class="codefalse-file">    <div class="codefalse-file-item codefalse-file-add" style="height: '+(a=s).height+";width: "+a.width+';">        <i class="codefalse-font icon-add" style="line-height: '+a.height+';"></i>    </div></div>'),r(".codefalse-file-add>i").on("click",function(){i.trigger("click")});var a}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNmLWZpbGUuanMiXSwibmFtZXMiOlsiJCIsImZuIiwiY29kZWZhbHNlRmlsZSIsIm9wdGlvbnMiLCJfdGhpczIiLCJ0aGlzIiwiX3RoaXMiLCJjb2RlZmFsc2VJZCIsInBhcnNlSW50IiwiTWF0aCIsInJhbmRvbSIsImZpbGVPcHRpb25zIiwiZXh0ZW5kIiwid2lkdGgiLCJoZWlnaHQiLCJ1cGxvYWRUeXBlIiwib24iLCJmaWxlcyIsIl9sb29wIiwiaSIsImZpbGUiLCJpdGVtIiwiYWRkRG9tIiwiZmluZCIsImJlZm9yZSIsIm1vZGFhbCIsInR5cGUiLCJiZWZvcmVfb3BlbiIsImUiLCJ1cmwiLCJ3aW5kb3ciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJ0YXJnZXQiLCJzZXRBdHRyaWJ1dGUiLCJiZWZvcmVfY2xvc2UiLCJhdHRyIiwicmV2b2tlT2JqZWN0VVJMIiwiZmlsZURvbSIsInByZXYiLCJpbWciLCJyZW1vdmUiLCJsZW5ndGgiLCJhZnRlciIsInRyaWdnZXIiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJBQUFBLGNBS0EsU0FBV0EsR0FZUEEsRUFBRUMsR0FBR0MsY0FBZ0IsU0FBVUMsR0FDM0IsSUFBSUMsRUFBU0MsS0FFVEMsRUFBUU4sRUFBRUssTUFDVkUsRUFBYyxrQkFBb0JDLFNBQXlCLElBQWhCQyxLQUFLQyxTQUFvQixJQU1wRUMsRUFBY1gsRUFBRVksT0FBTyxHQUxaLENBQ1hDLE1BQU8sUUFDUEMsT0FBUSxRQUNSQyxXQUFZLFVBRXlCWixHQUd6Q0csRUFBTVUsR0FBRyxTQUFVLFdBMkNmLElBMUNBLElBQUlDLEVBQVFqQixFQUFFSSxHQUFRLEdBQUdhLE1BR3JCQyxFQUFRLFNBQWVDLEdBQ3ZCLElBdkJhaEIsRUF1QlRpQixFQUFPSCxFQUFNRSxHQUViRSxFQXhCRCxvREFEVWxCLEVBeUJjUSxHQXhCcUNHLE9BQVMsV0FBYVgsRUFBUVUsTUFBUSw2REFBb0VWLEVBQVFVLE1BQVEsMk1BeUJ0TFMsRUFBU3RCLEVBQUUsSUFBTU8sR0FBYWdCLEtBQUssdUJBQ3ZDRCxFQUFPRSxPQUFPSCxHQUVkckIsRUFBRSx5QkFBeUJ5QixPQUFPLENBQzlCQyxLQUFNLFFBQ05DLFlBQWEsU0FBcUJDLEdBQzlCLElBQUlDLEVBQU1DLE9BQU9DLElBQUlDLGdCQUFnQlosR0FFckNRLEVBQUVLLE9BQU9DLGFBQWEsT0FBUUwsSUFFbENNLGFBQWMsU0FBc0JQLEdBQ2hDLElBQUlDLEVBQU1ELEVBQUVMLEtBQUssT0FBT2EsS0FBSyxPQUU3Qk4sT0FBT0MsSUFBSU0sZ0JBQWdCUixNQUluQyxJQUFJUyxFQUFVaEIsRUFBT2lCLE9BRWpCQyxFQUFNRixFQUFRZixLQUFLLE9BQ3ZCLEdBQStCLFdBQTNCWixFQUFZSSxXQUF5QixDQUNyQyxJQUFJYyxFQUFNQyxPQUFPQyxJQUFJQyxnQkFBZ0JaLEdBQ3JDb0IsRUFBSUosS0FBSyxNQUFPUCxHQUNoQlcsRUFBSXhCLEdBQUcsT0FBUSxXQUNYYyxPQUFPQyxJQUFJTSxnQkFBZ0JHLEVBQUlKLEtBQUssVUFNNUNFLEVBQVFmLEtBQUssdUJBQXVCUCxHQUFHLFFBQVMsV0FDNUNzQixFQUFRRyxZQUlQdEIsRUFBSSxFQUFHQSxFQUFJRixFQUFNeUIsT0FBUXZCLElBQzlCRCxFQUFNQyxLQVFOYixFQUFNOEIsS0FBSyxRQUFTLGdCQUVwQjlCLEVBQU1xQyxNQTVFTCxZQTRFMEJwQyxFQTVFUCxvR0FESkosRUE2RXdCUSxHQTVFOEZHLE9BQVMsV0FBYVgsRUFBUVUsTUFBUSxxRUFBNEVWLEVBQVFXLE9BQVMsMkJBOEV6UWQsRUFBRSx5QkFBeUJnQixHQUFHLFFBQVMsV0FDbkNWLEVBQU1zQyxRQUFRLFdBUmhCLElBeEVjekMsR0FGaEMsQ0F3RkcwQyIsImZpbGUiOiJjZi1maWxlLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXHJcbiAqIENvZGVmYWxzZS1Gb3JtIG1vZHVsZSBmaWxlLlxyXG4gKi9cbihmdW5jdGlvbiAoJCkge1xuXG4gICAgZnVuY3Rpb24gX2luaXRDb21wb25lbnQoaWQsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGNmID0gJzxkaXYgaWQ9XCInICsgaWQgKyAnXCIgY2xhc3M9XCJjb2RlZmFsc2UtZmlsZVwiPicgKyAnICAgIDxkaXYgY2xhc3M9XCJjb2RlZmFsc2UtZmlsZS1pdGVtIGNvZGVmYWxzZS1maWxlLWFkZFwiIHN0eWxlPVwiaGVpZ2h0OiAnICsgb3B0aW9ucy5oZWlnaHQgKyAnO3dpZHRoOiAnICsgb3B0aW9ucy53aWR0aCArICc7XCI+JyArICcgICAgICAgIDxpIGNsYXNzPVwiY29kZWZhbHNlLWZvbnQgaWNvbi1hZGRcIiBzdHlsZT1cImxpbmUtaGVpZ2h0OiAnICsgb3B0aW9ucy5oZWlnaHQgKyAnO1wiPjwvaT4nICsgJyAgICA8L2Rpdj4nICsgJzwvZGl2Pic7XG4gICAgICAgIHJldHVybiBjZjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfY3JlYXRlRmlsZUl0ZW0ob3B0aW9ucykge1xuICAgICAgICB2YXIgaXRlbSA9ICc8ZGl2IGNsYXNzPVwiY29kZWZhbHNlLWZpbGUtaXRlbVwiIHN0eWxlPVwiaGVpZ2h0OiAnICsgb3B0aW9ucy5oZWlnaHQgKyAnO3dpZHRoOiAnICsgb3B0aW9ucy53aWR0aCArICc7XCI+JyArICcgICA8ZGl2IGNsYXNzPVwiY29kZWZhbHNlLWZpbGUtb3BlcmF0aW9uXCIgc3R5bGU9XCJ3aWR0aDogJyArIG9wdGlvbnMud2lkdGggKyAnO1wiPicgKyAnICAgICAgPGkgY2xhc3M9XCJjb2RlZmFsc2UtZmlsZS1kZWwgY29kZWZhbHNlLWZvbnQgaWNvbi1kZWxldGVcIj48L2k+JyArICcgICAgICA8aSBkYXRhLW1vZGFhbC1jb250ZW50LXNvdXJjZT1cIlwiIGNsYXNzPVwiY29kZWZhbHNlLWZpbGUteXVsYW4gY29kZWZhbHNlLWZvbnQgaWNvbi15dWxhblwiPjwvaT4nICsgJyAgIDwvZGl2PicgKyAnICAgPGltZyBzcmM9XCJcIiAvPicgKyAnPC9kaXY+JztcbiAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfVxuXG4gICAgJC5mbi5jb2RlZmFsc2VGaWxlID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgICAgdmFyIF90aGlzID0gJCh0aGlzKTtcbiAgICAgICAgdmFyIGNvZGVmYWxzZUlkID0gJ2NvZGVmYWxzZS1maWxlLScgKyBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMTAwMDAwICsgJycpO1xuICAgICAgICB2YXIgZGVmYXVsdHMgPSB7XG4gICAgICAgICAgICB3aWR0aDogJzIwMHB4JyxcbiAgICAgICAgICAgIGhlaWdodDogJzIwMHB4JyxcbiAgICAgICAgICAgIHVwbG9hZFR5cGU6ICdub3JtYWwnXG4gICAgICAgIH07XG4gICAgICAgIHZhciBmaWxlT3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBkZWZhdWx0cywgb3B0aW9ucyk7XG5cbiAgICAgICAgLy/nm5HmjqdpbnB1dOmAieaLqeaWh+S7tlxuICAgICAgICBfdGhpcy5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGZpbGVzID0gJChfdGhpczIpWzBdLmZpbGVzO1xuICAgICAgICAgICAgY29uc29sZS5sb2coZmlsZXMpO1xuXG4gICAgICAgICAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZpbGUgPSBmaWxlc1tpXTtcbiAgICAgICAgICAgICAgICAvLyBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBfY3JlYXRlRmlsZUl0ZW0oZmlsZU9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIHZhciBhZGREb20gPSAkKCcjJyArIGNvZGVmYWxzZUlkKS5maW5kKCcuY29kZWZhbHNlLWZpbGUtYWRkJyk7XG4gICAgICAgICAgICAgICAgYWRkRG9tLmJlZm9yZShpdGVtKTtcbiAgICAgICAgICAgICAgICAvL+e7keWumm1vZGFhbFxuICAgICAgICAgICAgICAgICQoJy5jb2RlZmFsc2UtZmlsZS15dWxhbicpLm1vZGFhbCh7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdpbWFnZScsXG4gICAgICAgICAgICAgICAgICAgIGJlZm9yZV9vcGVuOiBmdW5jdGlvbiBiZWZvcmVfb3BlbihlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5Yqg6L2977yaJyArIHVybCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnRhcmdldC5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCB1cmwpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBiZWZvcmVfY2xvc2U6IGZ1bmN0aW9uIGJlZm9yZV9jbG9zZShlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gZS5maW5kKCdpbWcnKS5hdHRyKCdzcmMnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfplIDmr4HvvJonICsgdXJsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5VUkwucmV2b2tlT2JqZWN0VVJMKHVybCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAvL+ebkeWQrOaWh+S7tuWdl+S6i+S7tlxuICAgICAgICAgICAgICAgIHZhciBmaWxlRG9tID0gYWRkRG9tLnByZXYoKTtcbiAgICAgICAgICAgICAgICAvL+WbvueJh+WKoOi9vVxuICAgICAgICAgICAgICAgIHZhciBpbWcgPSBmaWxlRG9tLmZpbmQoJ2ltZycpO1xuICAgICAgICAgICAgICAgIGlmIChmaWxlT3B0aW9ucy51cGxvYWRUeXBlID09PSAnbm9ybWFsJykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSk7XG4gICAgICAgICAgICAgICAgICAgIGltZy5hdHRyKCdzcmMnLCB1cmwpO1xuICAgICAgICAgICAgICAgICAgICBpbWcub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuVVJMLnJldm9rZU9iamVjdFVSTChpbWcuYXR0cignc3JjJykpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge31cbiAgICAgICAgICAgICAgICAvL+WFtuS7luexu+Wei1xuXG4gICAgICAgICAgICAgICAgLy/lm77niYfliKDpmaRcbiAgICAgICAgICAgICAgICBmaWxlRG9tLmZpbmQoJy5jb2RlZmFsc2UtZmlsZS1kZWwnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGZpbGVEb20ucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZpbGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgX2xvb3AoaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHZhciBtZXRob2RzID0ge1xuICAgICAgICAgICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc3RhcnQgY29kZWZhbHNlIGZpbGUuLi4uLi4nKTtcbiAgICAgICAgICAgICAgICAvL+makOiXj+aWh+S7tumAieaLqVxuICAgICAgICAgICAgICAgIF90aGlzLmF0dHIoXCJzdHlsZVwiLCBcImRpc3BsYXk6bm9uZVwiKTtcbiAgICAgICAgICAgICAgICAvL+WIneWni+WMluaWh+S7tumAieaLqee7hOS7tlxuICAgICAgICAgICAgICAgIF90aGlzLmFmdGVyKF9pbml0Q29tcG9uZW50KGNvZGVmYWxzZUlkLCBmaWxlT3B0aW9ucykpO1xuICAgICAgICAgICAgICAgIC8v55uR5ZCs5re75Yqg5LqL5Lu2XG4gICAgICAgICAgICAgICAgJCgnLmNvZGVmYWxzZS1maWxlLWFkZD5pJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy50cmlnZ2VyKCdjbGljaycpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBtZXRob2RzLmluaXQoKTtcbiAgICB9O1xufSkoalF1ZXJ5KTsiXX0=
